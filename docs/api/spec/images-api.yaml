openapi: 3.0.0
info:
  title: Treetracker Images API
  version: '1.0.7'
  description: 'The Images API of Greenstand for resizing and rotating image resources.'
  contact:
    name: Greenstand Support
    email: admin@greenstand.com
  license:
    name: GPL 3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
servers:
  - url: https://{environment}-k8s.treetracker.org/images
    variables:
      environment:
        default: dev
        enum:
          - dev     # Development server
          - test    # Test server
          - prod    # Production server
paths:
  '/img/{domain}/{image}':
    get:
      tags:
        - Images
      operationId: get-image-no-params
      deprecated: false
      summary: 'Return an image resource'
      description: |
        Return an image resource from a specified URL. 
        
        This endpoint also supports URLs of arbitrary depth, for example, `/img/domain/path/path/.../image`.
      parameters:
        - name: domain
          in: path
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: treetracker-production-images.xxyyz.com
        - name: image
          in: path
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: IMG_20221127_075015_8954894720936228485.jpg
      responses:
        '200':
          description: 'Successfully get the image resource.'
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '500':
          $ref: '#/components/responses/UnknownError'
  '/img/{domain}/{params}/{image}':
    get:
      tags:
        - Images
      operationId: get-image-with-params
      deprecated: false
      summary: 'Resize and/or rotate an image based on parameters'
      description: |
        Return a resized and/or rotated image according to specified parameters.
        
        The parameters should be in the format `h=100,w=100`. Currently supported parameters are: 
        * `h` - height 
        * `w` - width
        * `r` - rotation in degrees 
        * `q` - quality (between 1 and 100)
        
        This endpoint also supports URLs of arbitrary depth, for example, `/img/domain/path/.../params/image`.
      parameters:
        - name: domain
          in: path
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: treetracker-production-images.xxyyz.com
        - name: image
          in: path
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: IMG_20221127_075015_8954894720936228485.jpg
        - name: params
          in: path
          required: true
          style: simple
          explode: true
          schema:
            type: string
            example: w=250,h=250,q=100
      responses:
        '200':
          description: 'Successfully get the resized and/or rotated image resource.'
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '422':
          $ref: '#/components/responses/InvalidRequestParameters'
        '500':
          $ref: '#/components/responses/UnknownError'
components:
  schemas:
    errorResponse:
      title: 'Error Response'
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
  responses:
    UnknownError:
      description: 'Unknown Error.'
      content:
        application/json:
          schema:
            type: object
            properties:
              externalUrl:
                type: string
                format: url
              code:
                type: integer
                format: int32
              message:
                type: string
          example:
            externalUrl: https://treetracker-production-images.xxyyz.com/fake-tree-image.jpg/invalid_url
            code: 500
            message: Request failed with status code 403
    InvalidRequestParameters:
      description: 'Invalid query parameters'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          example:
            code: 422
            message: '"w" must be a number'